
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    [{"authors":null,"categories":null,"content":"Khrustalev Vlad Nikolaevich - 18 years old, 1st year student, group NPIBd-02-22. At the moment one of my main interests is programming.\n","date":1685145602,"expirydate":-62135596800,"kind":"term","lang":"en","lastmod":1685145602,"objectID":"2525497d367e79493fd32b198b28f040","permalink":"","publishdate":"0001-01-01T00:00:00Z","relpermalink":"","section":"authors","summary":"Khrustalev Vlad Nikolaevich - 18 years old, 1st year student, group NPIBd-02-22. At the moment one of my main interests is programming.","tags":null,"title":"Vlad Khrustalev","type":"authors"},{"authors":[],"categories":null,"content":" Click on the Slides button above to view the built-in slides feature.   Slides can be added in a few ways:\n Create slides using Wowchemy’s Slides feature and link using slides parameter in the front matter of the talk file Upload an existing slide deck to static/ and link using url_slides parameter in the front matter of the talk file Embed your slides (e.g. Google Slides) or presentation video on this page using shortcodes.  Further event details, including page elements such as image galleries, can be added to the body of this page.\n","date":1906549200,"expirydate":-62135596800,"kind":"page","lang":"en","lastmod":1906549200,"objectID":"a8edef490afe42206247b6ac05657af0","permalink":"https://Bezura.github.io/talk/example-talk/","publishdate":"2017-01-01T00:00:00Z","relpermalink":"/talk/example-talk/","section":"event","summary":"An example talk using Wowchemy's Markdown slides feature.","tags":[],"title":"Example Talk","type":"event"},{"authors":["Vlad Khrustalev"],"categories":["Demo"],"content":"import libr print(\u0026#39;hello\u0026#39;) Arduino is an electronic project development platform that allows you to build devices and automated systems using a microcontroller. If you are interested in electronics and programming, Arduino can be a great choice for your creative and engineering ideas. In this post, we’ll look at some key aspects of Arduino project development.\n1. Learn the basics of Arduino. Before you start developing projects on Arduino, it’s important to learn the basics of the platform. Become familiar with Arduino hardware components such as boards, microcontrollers, I/O ports, etc. Also learn the Arduino programming language, which is based on C++. Understanding the basic concepts and functions of Arduino will help you create projects more efficiently.\n2. Choose the right Arduino platform There are many different Arduino platforms on the market, each with different features and characteristics. Choose the Arduino platform that best suits your needs and project requirements. Different platforms may differ in power, size, analog and digital port availability, and other parameters.\n3. Select the components you need Depending on your project, you will need various electronic components such as resistors, sensors, displays, motors, etc. Create a list of required components and purchase them. Pay attention to the compatibility of the components with the chosen Arduino platform.\n4. Start with simple projects If you are new to Arduino development, it is recommended to start with simple projects. For example, LED indicators, buttons, sound signals or motor controls. This will help you learn the basics of Arduino and programming.\n5. Explore examples and libraries Arduino has an extensive library and many example projects that can be used in your development. Explore\navailable examples and libraries to see what features and functions are already implemented and can be used in your projects. This will save you time and improve development efficiency.\n6. Keep experimenting and learning Arduino offers endless possibilities for creativity and engineering projects. Keep experimenting, create new projects, and deepen your knowledge. Use online resources, forums, and Arduino communities to share experiences and get support.\nI hope these tips will help you get started developing Arduino projects. Remember that creativity and persistence play an important role in achieving success. Good luck with your Arduino development!\n*Share your Arduino projects and experiences in the comments below!\n*Disclaimer: Make sure that you follow the appropriate safety rules and guidelines when working with Arduino electricity and components.\n","date":1685145602,"expirydate":-62135596800,"kind":"page","lang":"en","lastmod":1685145602,"objectID":"a06327afcedcebacc1ea72ec5b4912f4","permalink":"https://Bezura.github.io/post/arduino/","publishdate":"2023-05-27T00:00:02Z","relpermalink":"/post/arduino/","section":"post","summary":"Arduino project development","tags":["Academic"],"title":"Arduino project development","type":"post"},{"authors":["Vlad Khrustalev"],"categories":["Demo"],"content":"import libr print(\u0026#39;hello\u0026#39;) Working with Bibliography\nCreating a reliable and well-organized bibliography is an integral part of successful scholarly work. It allows readers to verify your sources and protects you from accusations of plagiarism. In this post, we will explore some important aspects of working with a bibliography and provide you with useful tips.\n1. Choose the correct citation style There are numerous citation styles such as APA, MLA, Chicago, and others. It is important to choose the one that aligns with the requirements of your field of study or the academic journal you plan to publish in. Each style has its own specifications regarding citation format and formatting of the reference list.\n2. Use bibliography management software Various programs and online services exist for managing bibliographic data, such as Zotero, Mendeley, EndNote, and others. They allow you to organize and store citations and complete bibliographic information, as well as automatically generate reference lists in the required style. Utilizing a bibliography management tool simplifies the citation process and minimizes the risk of errors.\n3. Maintain a bibliographic record for each source When working with literature, maintain a meticulous bibliographic record for each source you use. The record should contain all necessary details, such as authors, article or book title, year of publication, publisher, etc. This will help you easily reference sources in your text and create accurate citations.\n4. Check for accuracy and completeness Before presenting your work, it is important to check the accuracy and completeness of your bibliography. Ensure that all sources are properly formatted according to the chosen citation style. Also, verify that you haven’t missed any sources used and that all in-text citations have corresponding entries in the reference list.\n5. Be consistent Consistency in formatting your bibliography is crucial. Follow the chosen citation style consistently throughout your work. Check that you use the same formats for different types of sources (books\n, journal articles, web pages, etc.). This helps create a professional and high-quality impression of your work.\nI hope these tips assist you in working with your bibliography. A clear and properly formatted bibliography enhances the quality of your scholarly work and makes it more persuasive to readers and reviewers.\nShare your thoughts and experiences with bibliography management in the comments below!\nDisclaimer: Make sure to check the requirements of your educational institution or academic journal for specific bibliography formatting rules. Citation styles and requirements may vary.\n","date":1685145602,"expirydate":-62135596800,"kind":"page","lang":"en","lastmod":1685145602,"objectID":"861159405bc8a963f2640b04dd53d937","permalink":"https://Bezura.github.io/post/biblic/","publishdate":"2023-05-27T00:00:02Z","relpermalink":"/post/biblic/","section":"post","summary":"Working with Bibliography","tags":["Academic"],"title":"Working with Bibliography","type":"post"},{"authors":["Vlad Khrustalev"],"categories":["Demo"],"content":"import libr print(\u0026#39;hello\u0026#39;) Scientific programming languages Scientific programming is a field that uses computer languages and technologies to solve scientific problems such as data analysis, physical process modeling, machine learning, and others. There are many programming languages that are suitable for scientific purposes, but some are more popular and common than others. In this post, I will discuss three such languages: Python, R, and Julia.\nPython. Python is a high-level interpreted programming language with dynamic typing and many libraries for scientific computing. Python is easy to learn and use, has a clean and clear syntax, supports multi-paradigm programming (object-oriented, functional, procedural, etc.) and has a large community of developers and users. Some of the best known libraries for scientific programming in Python include NumPy, SciPy, Pandas, Matplotlib, Scikit-learn and TensorFlow.\nR R is a programming language and environment for statistical analysis and data visualization. R is designed specifically for working with data and has many built-in functions and packages for it. R also supports various types of charts and graphs that can be easily created and customized. R is an interpreted language with dynamic typing and a functional programming paradigm. Popular packages for scientific R programming include Tidyverse, ggplot2, Shiny and R Markdown.\nJulia Julia is a relatively new programming language, designed to combine the speed of execution of low-level languages (like C or Fortran) with the expressiveness and convenience of high-level languages (like Python or R). Julia compiles to machine code before execution and has a powerful multiple dispatch system, which allows to define behavior of functions depending on types and number of arguments. Julia also supports metaprogramming, parallel and distributed computing, interoperability with other languages and a rich set of libraries for scientific programming. These include Plots, DataFrames, Flux and DifferentialEquations.\nConclusion Scientific programming languages are tools that help scientists and engineers solve complex problems in various fields of knowledge. The choice of language depends on the specific task at hand.\n","date":1683936062,"expirydate":-62135596800,"kind":"page","lang":"en","lastmod":1683936062,"objectID":"fbf4628eb2e4d8dd913775c317857663","permalink":"https://Bezura.github.io/post/scientific_programming_languages/","publishdate":"2023-05-13T00:01:02Z","relpermalink":"/post/scientific_programming_languages/","section":"post","summary":"Scientific programming languages","tags":["Academic"],"title":"Scientific programming languages","type":"post"},{"authors":["Vlad Khrustalev"],"categories":["Demo"],"content":"import libr print(\u0026#39;hello\u0026#39;) How I spent the past week Hi friends, I want to tell you how I spent my week in my hometown. It was wonderful!\nOn Friday I visited my family and we had a long chat over dinner. They were very happy to see me and gave me a warm welcome.\nOn Saturday, I met up with my friends from school. We gathered at our favorite cafe and talked over a cup of coffee. We exchanged our experiences, laughed at old jokes, and reminisced about our adventures and dreams. We also visited our school and our classroom teacher.\nOn Sunday, I spent the day outdoors with my family. We went for a picnic by the river. The weather was beautiful: sunny, warm and refreshing. We enjoyed the beauty of nature, rode our bikes, played ball, fished, and swam in the river.\nOn Monday, I started getting ready to leave. I packed my things, gave my family souvenirs from the city where I study, and thanked them for all they do for me.\nI am so glad I was able to visit my hometown and spend time with my loved ones. It was one of the most memorable and enjoyable weeks of my life!\n","date":1683936000,"expirydate":-62135596800,"kind":"page","lang":"en","lastmod":1683936000,"objectID":"b5aa8cda2ead19ee1630c118fae5c5ac","permalink":"https://Bezura.github.io/post/my_last_week-_3/","publishdate":"2023-05-13T00:00:00Z","relpermalink":"/post/my_last_week-_3/","section":"post","summary":"Weekly Report _3_.","tags":["Academic"],"title":"Weekly Report _3_.","type":"post"},{"authors":["Vlad Khrustalev"],"categories":["Demo"],"content":"import libr print(\u0026#39;hello\u0026#39;) What is Markdown Markdown is a text markup language created by writer and blogger John Gruber. It’s designed to create beautifully formatted text in regular TXT files. You don’t need a cumbersome word processor like Word or Pages to create documents with bold or italic type, quotations, links, and even tables. All you need to do is memorize the simple rules of Markdown and you can even write in Notepad. A dedicated Markdown editor is a good idea.\nIt is a markup language used by bloggers, writers, editors and journalists all over the world. Everyone involved in those professions will find it useful to know about it.\n#*Where you can use Markdown\nNotes A Markdown editor with a file panel (like Atom or iA Writer) is a pretty decent alternative to Evernote and OneNote. We’ve written before about why Markdown is good for organizing your note base.\nDrafts for Blogging This markup language is compatible with a bunch of online editors and blogging platforms. You can write a draft for your blog in Markdown and then publish it in seconds - all the links, headings, and formatting will look just as you intended. It’s not like copying from Word.\nTask Lists Markdown editors make it very easy to create shopping lists, to-do lists, and work task lists. Some geeks use a regular todo.txt text file as an alternative to fancy Wunderlist and Todoist. You can learn how to do this at Todo.txt.\nMessengers Even some messengers support Markdown. In Telegram, for example, you can use Markdown to apply bold or italic highlighting.\nThe advantages of Markdown Versatility Documents written using the Markdown syntax are plain TXT text files. They can be opened on any platform and in any editor. This makes them different from text processor files. Have you ever tried opening an Apple Pages document in Word?\nSimplicity Markdown is so simple that even people who haven’t heard of Latex and HTML can learn it in 10 minutes. Grids for subheadings, asterisks for highlighting, dashes for lists. It couldn’t be easier.\nA wide range of tools There are many, many editors for Markdown documents. There are online, mobile, and desktop tools. There is the monster Atom, the beautiful and minimalistic ghostwriter and iA Writer, Vim for geeks and Ulysses for professional writers. Take your pick.\nConvertibility. Markdown documents can be easily exported in any format such as PDF, DOC and ODT. Their formatting remains unchanged.\n","date":1680912002,"expirydate":-62135596800,"kind":"page","lang":"en","lastmod":1680912002,"objectID":"bd238f54b82fdcd586f8f7e438599565","permalink":"https://Bezura.github.io/post/markdown/","publishdate":"2023-04-08T00:00:02Z","relpermalink":"/post/markdown/","section":"post","summary":"Markdown markup language","tags":["Academic"],"title":"Markdown markup language","type":"post"},{"authors":["Vlad Khrustalev"],"categories":["Demo"],"content":"import libr print(\u0026#39;hello\u0026#39;) Beginning at Yes, yes… Unexpectedly, even for me, that the second such post. But, unfortunately or fortunately, it’s not my whims (laba, it’s all her…). What about the week, everything is great, summer is coming, the weather is super) I wish everyone happiness!!!\n","date":1680912000,"expirydate":-62135596800,"kind":"page","lang":"en","lastmod":1680912000,"objectID":"c64e218ec3eb7b40906186934bd90fd0","permalink":"https://Bezura.github.io/post/my_last_week-_2/","publishdate":"2023-04-08T00:00:00Z","relpermalink":"/post/my_last_week-_2/","section":"post","summary":"Как прошла моя последняя неделя??","tags":["Academic"],"title":"Недельный отчёт(УЖЕ ВТОРОЙ!!!).","type":"post"},{"authors":["Vlad Khrustalev"],"categories":["Demo"],"content":"import libr print(\u0026#39;hello\u0026#39;) Version Control Systems.General Concepts Version Control Systems (VCS) are used when several people work on a project. Usually the main project tree is stored in a local or remote repository, to which access is set up for project members. When changes are made to the project content, version control systems allow you to commit changes, merge changes made by different project members, and revert to any earlier version of the project if needed.\nClassic version control systems use a centralized model, which implies a single repository for storing files. Most version control functions are performed by a special server. A project participant (user) obtains the necessary version of the files before starting to work, and after making changes, the user places the new version into the repository, so that previous versions are not deleted from the central repository and can be returned to at any time.\nVersion control systems support the ability to track and resolve conflicts that may arise when several people work on the same file. You can merge changes made by different participants (automatically or manually), manually select the correct version, discard changes at all or lock files for modification. Depending on the settings, locking prevents other users from getting a working copy or prevents modification of the working copy by the OS file system, thereby ensuring that the version of the file is not changed.\nVersion control systems can also provide additional, more flexible functionality. For example, they can support multiple versions of the same file, keeping an overall history of changes up to the branching point and each branch’s own change history. In addition, information is usually available about which participant made which changes, when, and what changes. Usually, this kind of information is stored in a change log, access to which can be restricted.\nIn contrast to classical VCSs, in distributed version control systems a central repository is optional.\nAmong the classical VCSs the most famous are CVS, Subversion, and among the distributed ones - Git, Bazaar, Mercurial, etc. The principles of their work are similar, the main difference is the syntax of the commands used.\nThe Git version control system The Git version control system is a collection of command-line programs. These can be accessed from the terminal by entering the git command with various options.\nBecause Git is a distributed version control system, you can back up your local repository by simply copying or archiving it.\nBasic git commands The most commonly used git commands are given in the table below\nКоманда Описание   git init creating the main repository tree\ngit pull to retrieve updates (changes) to the current tree from the\ncentral repository\ngit push push any changes you have made to the local\nto the central repository\ngit status to browse the list of changed files in the current\ndirectory\ngit diff to review the current changes\ngit add . add all modified and/or created files and/or\ndirectories\ngit add specific modified and/or created file names and/or directories\ngit rm to remove the file and/or directory from the repository index (which keeps the file and/or directory in the local directory)\ngit commit to save any changes you’ve added and any changes you’ve changed -am ‘commit file description\nCommand Description   git checkout create a new branch based on the current branch -b branch name_name\ngit checkout switch to some branch (switching to a branch name that isn’t already in the local repository will\nbranch that isn’t yet in the local repository is created and linked to a remote branch)\ngit push to send branch changes to the central origin repository\nbranch name\ngit merge branch into current tree –no-ff\nbranch name\ngit branch -D remove a local branch that has already been merged into the main branch, branch name\ngit branch -D forcibly deletes a local branch\nbranch name\ngit push branch removal from the central repository\norigin\n:name_branches   Standard procedures for working with a central repository The user begins by checking and getting changes from the central repository (no changes should have been made to the local tree before this procedure began):   git checkout master\ngit pull\ngit checkout -b branch name_name\nYou can then make changes to the local tree and/or branch.\nWhen you are done making changes to files and/or directories in your project, you should place them in the central repository. To do this, you need to check which files have changed so far:\ngit status\nand if necessary, remove unnecessary files you do not want to upload to the central repository.\nThen, it is useful to review the changes against the clean commit rules:\ngit diff\nIf there are files that should be kept out of the commit, you can use the add and/or remove commands with the appropriate options to keep the changes:\ngit add file names git rm file names\nIf you want to keep all changes in the current directory, use: git add . …","date":1679097602,"expirydate":-62135596800,"kind":"page","lang":"en","lastmod":1679097602,"objectID":"7177a26a2d955dc9275421bed51b249e","permalink":"https://Bezura.github.io/post/git_versions_control/","publishdate":"2023-03-18T00:00:02Z","relpermalink":"/post/git_versions_control/","section":"post","summary":"Version control. Git.","tags":["Academic"],"title":"Version control. Git.","type":"post"},{"authors":["Vlad Khrustalev"],"categories":["Demo"],"content":"import libr print(\u0026#39;hello\u0026#39;) Beginning The week went pretty normally. I did all my homework on time this week, as usual. Nothing more to say\n","date":1679097600,"expirydate":-62135596800,"kind":"page","lang":"en","lastmod":1679097600,"objectID":"194546b144df3a7ba9bb4e6885abfad4","permalink":"https://Bezura.github.io/post/my_last_week_1/","publishdate":"2023-03-18T00:00:00Z","relpermalink":"/post/my_last_week_1/","section":"post","summary":"Welcome to the first weekly report","tags":["Academic"],"title":"Weekly Report.","type":"post"},{"authors":["Vlad Khrustalev"],"categories":null,"content":" Create your slides in Markdown - click the Slides button to check out the example.   Supplementary notes can be added here, including code, math, and images.\n","date":1554595200,"expirydate":-62135596800,"kind":"page","lang":"en","lastmod":1554595200,"objectID":"557dc08fd4b672a0c08e0a8cf0c9ff7d","permalink":"https://Bezura.github.io/publication/preprint/","publishdate":"2017-01-01T00:00:00Z","relpermalink":"/publication/preprint/","section":"publication","summary":"Lorem ipsum dolor sit amet, consectetur adipiscing elit. Duis posuere tellus ac convallis placerat. Proin tincidunt magna sed ex sollicitudin condimentum.","tags":["Source Themes"],"title":"An example preprint / working paper","type":"publication"},{"authors":[],"categories":[],"content":"Create slides in Markdown with Wowchemy Wowchemy | Documentation\n Features  Efficiently write slides in Markdown 3-in-1: Create, Present, and Publish your slides Supports speaker notes Mobile friendly slides   Controls  Next: Right Arrow or Space Previous: Left Arrow Start: Home Finish: End Overview: Esc Speaker notes: S Fullscreen: F Zoom: Alt + Click PDF Export   Code Highlighting Inline code: variable\nCode block:\nporridge = \u0026#34;blueberry\u0026#34; if porridge == \u0026#34;blueberry\u0026#34;: print(\u0026#34;Eating...\u0026#34;)  Math In-line math: $x + y = z$\nBlock math:\n$$ f\\left( x \\right) = ;\\frac{{2\\left( {x + 4} \\right)\\left( {x - 4} \\right)}}{{\\left( {x + 4} \\right)\\left( {x + 1} \\right)}} $$\n Fragments Make content appear incrementally\n{{% fragment %}} One {{% /fragment %}} {{% fragment %}} **Two** {{% /fragment %}} {{% fragment %}} Three {{% /fragment %}} Press Space to play!\nOne  Two  Three   A fragment can accept two optional parameters:\n class: use a custom style (requires definition in custom CSS) weight: sets the order in which a fragment appears   Speaker Notes Add speaker notes to your presentation\n{{% speaker_note %}} - Only the speaker can read these notes - Press `S` key to view {{% /speaker_note %}} Press the S key to view the speaker notes!\n Only the speaker can read these notes Press S key to view    Themes  black: Black background, white text, blue links (default) white: White background, black text, blue links league: Gray background, white text, blue links beige: Beige background, dark text, brown links sky: Blue background, thin dark text, blue links    night: Black background, thick white text, orange links serif: Cappuccino background, gray text, brown links simple: White background, black text, blue links solarized: Cream-colored background, dark green text, blue links   Custom Slide Customize the slide style and background\n{{\u0026lt; slide background-image=\u0026#34;/media/boards.jpg\u0026#34; \u0026gt;}} {{\u0026lt; slide background-color=\u0026#34;#0000FF\u0026#34; \u0026gt;}} {{\u0026lt; slide class=\u0026#34;my-style\u0026#34; \u0026gt;}}  Custom CSS Example Let’s make headers navy colored.\nCreate assets/css/reveal_custom.css with:\n.reveal section h1, .reveal section h2, .reveal section h3 { color: navy; }  Questions? Ask\nDocumentation\n","date":1549324800,"expirydate":-62135596800,"kind":"page","lang":"en","lastmod":1549324800,"objectID":"0e6de1a61aa83269ff13324f3167c1a9","permalink":"https://Bezura.github.io/slides/example/","publishdate":"2019-02-05T00:00:00Z","relpermalink":"/slides/example/","section":"slides","summary":"An introduction to using Wowchemy's Slides feature.","tags":[],"title":"Slides","type":"slides"},{"authors":null,"categories":null,"content":"Lorem ipsum dolor sit amet, consectetur adipiscing elit. Duis posuere tellus ac convallis placerat. Proin tincidunt magna sed ex sollicitudin condimentum. Sed ac faucibus dolor, scelerisque sollicitudin nisi. Cras purus urna, suscipit quis sapien eu, pulvinar tempor diam. Quisque risus orci, mollis id ante sit amet, gravida egestas nisl. Sed ac tempus magna. Proin in dui enim. Donec condimentum, sem id dapibus fringilla, tellus enim condimentum arcu, nec volutpat est felis vel metus. Vestibulum sit amet erat at nulla eleifend gravida.\nNullam vel molestie justo. Curabitur vitae efficitur leo. In hac habitasse platea dictumst. Sed pulvinar mauris dui, eget varius purus congue ac. Nulla euismod, lorem vel elementum dapibus, nunc justo porta mi, sed tempus est est vel tellus. Nam et enim eleifend, laoreet sem sit amet, elementum sem. Morbi ut leo congue, maximus velit ut, finibus arcu. In et libero cursus, rutrum risus non, molestie leo. Nullam congue quam et volutpat malesuada. Sed risus tortor, pulvinar et dictum nec, sodales non mi. Phasellus lacinia commodo laoreet. Nam mollis, erat in feugiat consectetur, purus eros egestas tellus, in auctor urna odio at nibh. Mauris imperdiet nisi ac magna convallis, at rhoncus ligula cursus.\nCras aliquam rhoncus ipsum, in hendrerit nunc mattis vitae. Duis vitae efficitur metus, ac tempus leo. Cras nec fringilla lacus. Quisque sit amet risus at ipsum pharetra commodo. Sed aliquam mauris at consequat eleifend. Praesent porta, augue sed viverra bibendum, neque ante euismod ante, in vehicula justo lorem ac eros. Suspendisse augue libero, venenatis eget tincidunt ut, malesuada at lorem. Donec vitae bibendum arcu. Aenean maximus nulla non pretium iaculis. Quisque imperdiet, nulla in pulvinar aliquet, velit quam ultrices quam, sit amet fringilla leo sem vel nunc. Mauris in lacinia lacus.\nSuspendisse a tincidunt lacus. Curabitur at urna sagittis, dictum ante sit amet, euismod magna. Sed rutrum massa id tortor commodo, vitae elementum turpis tempus. Lorem ipsum dolor sit amet, consectetur adipiscing elit. Aenean purus turpis, venenatis a ullamcorper nec, tincidunt et massa. Integer posuere quam rutrum arcu vehicula imperdiet. Mauris ullamcorper quam vitae purus congue, quis euismod magna eleifend. Vestibulum semper vel augue eget tincidunt. Fusce eget justo sodales, dapibus odio eu, ultrices lorem. Duis condimentum lorem id eros commodo, in facilisis mauris scelerisque. Morbi sed auctor leo. Nullam volutpat a lacus quis pharetra. Nulla congue rutrum magna a ornare.\nAliquam in turpis accumsan, malesuada nibh ut, hendrerit justo. Cum sociis natoque penatibus et magnis dis parturient montes, nascetur ridiculus mus. Quisque sed erat nec justo posuere suscipit. Donec ut efficitur arcu, in malesuada neque. Nunc dignissim nisl massa, id vulputate nunc pretium nec. Quisque eget urna in risus suscipit ultricies. Pellentesque odio odio, tincidunt in eleifend sed, posuere a diam. Nam gravida nisl convallis semper elementum. Morbi vitae felis faucibus, vulputate orci placerat, aliquet nisi. Aliquam erat volutpat. Maecenas sagittis pulvinar purus, sed porta quam laoreet at.\n","date":1461715200,"expirydate":-62135596800,"kind":"page","lang":"en","lastmod":1461715200,"objectID":"e8f8d235e8e7f2efd912bfe865363fc3","permalink":"https://Bezura.github.io/project/example/","publishdate":"2016-04-27T00:00:00Z","relpermalink":"/project/example/","section":"project","summary":"An example of using the in-built project page.","tags":["Deep Learning"],"title":"Example Project","type":"project"},{"authors":null,"categories":null,"content":"","date":1461715200,"expirydate":-62135596800,"kind":"page","lang":"en","lastmod":1461715200,"objectID":"d1311ddf745551c9e117aa4bb7e28516","permalink":"https://Bezura.github.io/project/external-project/","publishdate":"2016-04-27T00:00:00Z","relpermalink":"/project/external-project/","section":"project","summary":"An example of linking directly to an external project website using `external_link`.","tags":["Demo"],"title":"External Project","type":"project"},{"authors":["Vlad Khrustalev","Robert Ford"],"categories":null,"content":" Click the Cite button above to demo the feature to enable visitors to import publication metadata into their reference management software.    Create your slides in Markdown - click the Slides button to check out the example.   Supplementary notes can be added here, including code, math, and images.\n","date":1441065600,"expirydate":-62135596800,"kind":"page","lang":"en","lastmod":1441065600,"objectID":"966884cc0d8ac9e31fab966c4534e973","permalink":"https://Bezura.github.io/publication/journal-article/","publishdate":"2017-01-01T00:00:00Z","relpermalink":"/publication/journal-article/","section":"publication","summary":"Lorem ipsum dolor sit amet, consectetur adipiscing elit. Duis posuere tellus ac convallis placerat. Proin tincidunt magna sed ex sollicitudin condimentum.","tags":["Source Themes"],"title":"An example journal article","type":"publication"},{"authors":["Vlad Khrustalev","Robert Ford"],"categories":null,"content":" Click the Cite button above to demo the feature to enable visitors to import publication metadata into their reference management software.    Create your slides in Markdown - click the Slides button to check out the example.   Supplementary notes can be added here, including code, math, and images.\n","date":1372636800,"expirydate":-62135596800,"kind":"page","lang":"en","lastmod":1372636800,"objectID":"69425fb10d4db090cfbd46854715582c","permalink":"https://Bezura.github.io/publication/conference-paper/","publishdate":"2017-01-01T00:00:00Z","relpermalink":"/publication/conference-paper/","section":"publication","summary":"Lorem ipsum dolor sit amet, consectetur adipiscing elit. Duis posuere tellus ac convallis placerat. Proin tincidunt magna sed ex sollicitudin condimentum.","tags":[],"title":"An example conference paper","type":"publication"}]